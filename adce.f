      SUBROUTINE ADCE(ZTE,ZNE,ZTA,ZNA)
C
C*************************************************************
C     CALCULATE CORONAL EQUILIBRIUM (INCLUDING CHARGE
C     EXCHANGE RECOMBINATION, IF PRESENT) USING THE IONIZATION,
C     RECOMBINATION, AND RADIATION RATES
C     STORED IN THE APPROPRIATE ARRAYS BY PREVIOUS CALLS
C     TO ADCSET, ADCERC, AND ADCBCXR.
C*************************************************************
C

      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
CMPIINSERT_INCLUDE     
C
      COMMON / ADSDAT / NUCZ, NSPC, APN(100,10), AQN(100,10),
     &                  NVALNC(100), SIGMA(10,10), QN(100,10),
     &                  EN(100,10), EIN(100,5), ENM(100,5,10),
     &                  FNM(100,5,10), FNN(100), ENN(100)
C
      COMMON / ADELEC / RCLION(100), RRAREC(100), RDIREC(100),
     &                  CIZLOS(100), RADRRC(100), RADDRC(100),
     &                  RADCLX(100), RADBRM(100) 
C
      COMMON / ADNEUT / RCXREC(100), RADBCX(100)
C
      COMMON / ADCEQ / CEAVGZ, CEAVGZ2, CERAD, CELOS,
     &                 CEFRAC(100),TOTREC(100),TOTION(100), 
     &                 TOTRAD(100)
C
      DIMENSION ZIONT(100), ZRECT(100), ZRADT(100)
      DIMENSION ZI(1), ZRE(1), ZRA(1)
C
      ROSML=1.d-37
C
C     FILL TOTAL IONIZATION, RECOMBINATION, AND RADIATION ARRAYS
C
      DO 10 JSPC = 1, NSPC
      ZIONT(JSPC) = RCLION(JSPC)
      ZRECT(JSPC) = RRAREC(JSPC) + RDIREC(JSPC) + RCXREC(JSPC)
      ZRADT(JSPC) = RADRRC(JSPC) + RADDRC(JSPC) + RADCLX(JSPC)
     &                           + RADBRM(JSPC) + RADBCX(JSPC)
   10 CONTINUE
C
C
C     FIRST GUESS AT MAXIMUM SPECIES
C
   15 DO 20 JQ = 1 , NSPC
      IF(ZRECT(JQ) .GE. ZIONT(JQ))GO TO 21
   20 CONTINUE
      JQ = NSPC
   21 ICNTR = JQ
C    WRITE(IOUT,23)ICNTR
C   23 FORMAT(1X,'ICNTR 1ST GUESS =',I3)
      IPASS = 1
C
C     INITIALIZE CEFRAC ARRAY
C
   25 DO 26 JQ = 1,NSPC
      CEFRAC(JQ) = 0.
   26 CONTINUE
      CEFRAC(ICNTR) = 1.
C
C     IF ICNTR IS FULLY STRIPPED WORK DOWN IN IONIZ ONLY
C
      IF(ICNTR.EQ.NSPC)GO TO 35
C
C     WORK UP FROM ICNTR SPECIES (TOWARDS HIGHER IONIZ STATES)
C
      II = ICNTR + 1
C
      DO 30 JQ = II,NSPC
      CEFRAC(JQ) = CEFRAC(JQ-1) * ZIONT(JQ-1) / ZRECT(JQ)
      IF(CEFRAC(JQ).LT.1.E-10*CEFRAC(ICNTR)) GO TO 32
   30 CONTINUE
C
C     IF ICNTR IS NEUTRAL WE'RE DONE
C
   32 IF(ICNTR.EQ.1)GO TO 42
C
C     WORK DOWN FROM ICNTR SPECIES
C
   35 II = ICNTR - 1
      DO 40 J = 1,II
      JQ = II - J + 1
      CEFRAC(JQ) = CEFRAC(JQ+1) * ZRECT(JQ+1) / ZIONT(JQ)
!--CMPIINSERT_IF_RANK_EQ_0      
!      WRITE(*,*)' ADCE: JQ,CEFRAC(JQ)=',JQ,CEFRAC(JQ)
!--CMPIINSERT_ENDIF_RANK
      IF(CEFRAC(JQ).LT.1.E-10*CEFRAC(ICNTR)) GO TO 42
   40 CONTINUE
C
C
   42 IF(IPASS.EQ.2)GO TO 49
C
C     END OF FIRST PASS - FIND NEW MAX SPECIES AND ITERATE
C
      IPASS = 2
      ZFRCMX = 0.
      DO 45 JQ = 1, NSPC
      IF(CEFRAC(JQ).LT.ZFRCMX)GO TO 45
      ZFRCMX = CEFRAC(JQ)
      IQFRAC = JQ
   45 CONTINUE
      ICNTR = IQFRAC
      GO TO 25
C
C
   49 ZPSUM = 0.
      DO 50 JQ = 1, NSPC
      ZPSUM = ZPSUM + CEFRAC(JQ)
   50 CONTINUE
C
C     NORMALIZE SPECIES FRACTIONS
C
      DO 55 JQ = 1, NSPC
      CEFRAC(JQ) = CEFRAC(JQ) / ZPSUM
   55 CONTINUE

C
C     COMPUTE RADIATION RATE
C
      CERAD = 0.
      DO 60 JQ = 1, NSPC
      IF(ZRADT(JQ) .LE. ROSML) GO TO 60
      IF(CEFRAC(JQ) .GT. ROSML / ZRADT(JQ)) THEN
      CERAD = CERAD + CEFRAC(JQ) * ZRADT(JQ)
      END IF
   60 CONTINUE
      CERAD=CERAD/ZNE
C
C     COMPUTE ELECTRON LOSS RATE
C
      CELOS = 0.
      DO 65 JQ = 1, NSPC-1
      IF(ZRADT(JQ) .LE. ROSML) GO TO 65
      CELOS = CELOS + CEFRAC(JQ) * CIZLOS(JQ) 
   65 CONTINUE
      CELOS=CELOS/ZNE
C
C     COMPUTE <Z> and <Z2>
C
      CEAVGZ = 0.
      CEAVGZ2 = 0.
      DO 70 JQ = 2,NSPC
      ZG=DBLE(JQ-1)
      CEAVGZ = CEAVGZ + ZG * CEFRAC(JQ)
      CEAVGZ2 = CEAVGZ2 + ZG*ZG * CEFRAC(JQ)
   70 CONTINUE
C
C----TOTAL RECOMBINATION
C
      DO 80 JQ = 1 , NSPC
      S = RCLION(JQ)
      TOTION(JQ) = S/ZNE
      S = RRAREC(JQ) + RDIREC(JQ) + RCXREC(JQ)
      TOTREC(JQ) = S/ZNE
      S = RADRRC(JQ) + RADDRC(JQ) + RADCLX(JQ) + 
     &    RADBRM(JQ) + RADBCX(JQ)
      TOTRAD(JQ)=S/ZNE
  80  CONTINUE
C
      RETURN
      END

