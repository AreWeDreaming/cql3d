
      SUBROUTINE ADCXR(DENSN, TEMPN)
C
C**************************************************************************
C     COMPUTE RECOMBINATION RATE DUE TO CHARGE EXCHANGE OF IONS
C     WITH NEUTRAL SINGLE COMPONENT NEUTRAL BEAM.
C**************************************************************************
C
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
C
      COMMON / ADCXXC / ANNEUT(5), VNEUT(5), 
     &                  NCXB, NCXOPT, NCXERR, IVUNIT
C
      ANNEUT(1)=DENSN
       VNEUT(1)=TEMPN

      CALL ADCBCXR(ANNEUT, VNEUT, NCXB, NCXOPT, NCXERR, IVUNIT)

      IF(NCXERR .EQ.0) GO TO 101
      PRINT 100, NCXERR, IVUNIT, NCXB, NCXOPT
C      WRITE(IOUT,100) NCXERR, IVUNIT, NCXB, NCXOPT
  100 FORMAT(1X,'NCXERR =',I3, ' IVUNIT=',I3,' NCXB=',I3,' NCXOPT=',I3)
      STOP

 101  RETURN
      END



      SUBROUTINE ADCBCXR(PNNEUT, PVNEUT, KNCXB, KCXOPT, KERR, KVUNIT)
C
C*************************************************************************
C     COMPUTE RECOMBINATION RATE DUE TO CHARGE EXCHANGE WITH NEUTRAL
C     BEAM IONS.
C
C          NPSC = NUMBER OF IMPURITY SPECIES (NUCLEAR Z + 1)
C
C          PNNEUT = ARRAY OF ANGULAR AVERAGED NEUTRAL DENSITIES FOR
C                   EACH BEAM ENERGY COMPONENT
C          PVNEUT = ARRAY OF VELOCITIES FOR EACH BEAM COMPONENT (CM/S)
C          KNCXB = NUMBER OF ENERGY COMPONENTS IN THE BEAM
C                 (KNCXB = 0 TURNS OFF RCXREC)
C          KCXOPT = 1, 2, OR 3 TO SELECT CROSS-SECTIONS TO BE USED
C          RCXREC = ARRAY OF CHARGE EXCHANGE RECOMBINATION RATES FOR
C                   EACH SPECIES, SEC-1 UNITS (E.G. RATE PER ION)
C          KERR = ERROR FLAG FROM ADCXXS ROUTINE (0 = O.K.)
C          RADBCX = RADIATION RATE DUE TO CASCADE AFTER
C                   CHARGE EXCHANGE TO EXCITED LEVEL (WATTS / ION)
C***************************************************************************
C
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)

      COMMON / ADSDAT / NUCZ, NSPC, APN(100,10), AQN(100,10),
     &                  NVALNC(100), SIGMA(10,10), QN(100,10),
     &                  EN(100,10), EIN(100,5), ENM(100,5,10),
     &                  FNM(100,5,10),FNN(100),ENN(100)
C
      COMMON / ADNEUT / RCXREC(100), RADBCX(100)
C
      EXTERNAL ADCXXS
C
      DIMENSION PNNEUT(KNCXB), PVNEUT(KNCXB)
      DIMENSION ZSIGMA(100)
      DOUBLE PRECISION ZVCMS
C
      ZJLKEV = 1.602E-16
C
      KERR=0
      INSPC = NSPC
C
C     ZERO RATE ARRAYS FOR ACCUMULATION OF CONTRIBUTIONS FROM EACH BEAM
C     COMPONENT
C
      DO 10 JSPC = 1 , 100
      RCXREC(JSPC) = 0.
      RADBCX(JSPC) = 0.
   10 CONTINUE
C
C     KNCXB = 0 OR KCXOPT = 0 TO TURN OFF C-X RECOMBINATION
C
      IF(KNCXB .EQ. 0 .OR. KCXOPT .EQ. 0) RETURN
C
C     OBTAIN CROSS-SECTIONS FOR EACH VELOCITY (ENERGY) COMPONENT
C     IN THE BEAM AND COMPUTE TOTAL RECOMBINATION RATE.
C
      DO 60 JB = 1 , KNCXB
C
      S=PVNEUT(JB)
      CALL ADCXXS(S, ZVCMS, ZSIGMA, INSPC, KVUNIT, KCXOPT, KERR)
      IF(KERR.NE.0) GO TO 1
      ZNFLUX = ZVCMS * PNNEUT(JB)
C
      DO 50 JSPC = 2 , INSPC
      RCXREC(JSPC) = RCXREC(JSPC) + ZNFLUX * ZSIGMA(JSPC)
   50 CONTINUE
C
   60 CONTINUE
C
      DO 70 JSPC = 2 , INSPC
      ITEMP = NVALNC(JSPC-1)
      RADBCX(JSPC) = ZJLKEV * EN(JSPC,ITEMP) * RCXREC(JSPC)
   70 CONTINUE
      GO TO 2
C
   1  PRINT 201, KERR, KVUNIT, KNCXB, KCXOPT,INSPC
  201 FORMAT('ADCBCXR ','NCXERR =',I3, ' IVUNIT=',
     &       I3,' NCXB=',I3,' NCXOPT=',I3,'NSPC=',I3)
 
   2  RETURN
      END



      SUBROUTINE ADCXXS(PVEL, PVCMS, PSIGMA, KNSPC, KVUNIT,
     &                     KOPT, KERR)
C
C********************************************************************
C     SUPPLIES CROSS-SECTIONS FOR CHARGE EXCHANGE BETWEEN NEUTRAL
C     HYDROGEN AND MULTI-CHARGED IONS.  THE VARIABLE KOPT ALLOWS
C     THE SELECTION OF RESULTS FROM ONE OF THE VARIOUS PUBLISHED
C     CALCULATIONS.
C
C     PVEL =  RELATIVE VELOCITY, UNITS AS SELECTED BY KVUNIT
C     KVUNIT = UNITS FLAG FOR INPUT VELOCITY
C                 1 = CM/SEC
C                 2 = KEV/AMU
C                 3 = ATOMIC UNITS
C     PSIGMA = ARRAY OF CROSS-SECTION VALUES RETURNED, CM**2.
C              PSIGMA(I) = CROSS-SECTION FOR ION WITH CHARGE = I-1,
C              FOR 2 <= I <= KNSPC
C     KNSPC = HIGHEST SPECIES NUMBER, = MAX Z + 1
C     KOPT = SWITCH FOR DIFFERENT RESULTS, AS FOLLOWS:
C            1 = OLSON & SALOP, PHYS. REV. A 14, 579 (1976)
C                (ABSORBING SPHERE, V <= 1.E08 CM/SEC)
C            2 = GROZDANOV & JANEV, PHYS. REV. A 17, 880 (1978)
C                (TUNNELING, 2.E06 <= V <= 8.E08 CM/SEC)
C            3 = OLSON & SALOP, PHYS. REV. A 16, 531 (1977)
C                (CLASSICAL, (2 - 7)E08 CM/SEC)
C     KERR = ERROR FLAG. 0 = O.K., <0 = INVALID INPUT, OTHERS IN TEXT
C
C*********************************************************************
C
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)

      DIMENSION PSIGMA(*)
      COMMON /ADCXXDAT / ZFITV(4), ZFITLT(4), ZFITGT(4)
C
      DATA ZFITV/ 2.7E08, 3.0E08, 4.0E08, 5.0E08/
      DATA ZFITLT/1.220988, 1.277249, 1.868400, 2.575095/
      DATA ZFITGT/1.000000, 1.050777, 1.221593, 1.668531/
C
C 
      KERR = 0
C
C     CONVERT INPUT VELOCITY PARAMETER
C
      IF(KVUNIT .NE. 1) GO TO 2
      ZVCMS = PVEL
      ZVKEVM = (ZVCMS / 4.39E+07)**2
      ZVAU = ZVCMS / 2.19E08
      GO TO 5
C
    2 IF(KVUNIT .NE. 2) GO TO 3
      ZVKEVM = PVEL
      ZVCMS = 4.39E+07 * DSQRT(ZVKEVM)
      ZVAU = ZVCMS / 2.19E+08
      GO TO 5
C
    3 IF(KVUNIT .NE. 3) GO TO 4
      ZVAU = PVEL
      ZVCMS = 2.19E+08 * ZVAU
      ZVKEVM = (ZVCMS / 4.39E+07)**2
      GO TO 5
C
    4 KERR = - 1
      RETURN
C
C     RETURN VELOCITY IN CM/S UNITS
C
    5 PVCMS = ZVCMS
C
C     NEUTRAL SPECIES CROSS-SECTION = 0
C
      PSIGMA(1) = 0.
C
      GO TO (100, 200, 300), KOPT
      KERR = -2
      RETURN
C
C
C     KOPT = 1 ; OLSON & SALOP LOW - V ABSORBING SPHERE
C     NOMINALLY VALID ONLY FOR V < 1.0E08 CM/SEC
C
  100 DO 110 JSPC = 3 , KNSPC
C
CW    WRITE(10,198)JSPC
CW  198 FORMAT(1X,/,'JSPC =',I3)
C
      ZCHG = DBLE(JSPC - 1)
      ZL = 2.648 / DSQRT(ZCHG)
      ZC = 2.864E-04 * ZCHG * (ZCHG - 1.) * ZVAU
      IF(ZC .LT. .541341133/(ZL**2) ) GO TO 102
      KERR = 1
      RETURN
C
C     ITERATIVE SOLUTION TO EQUATION (10)
C
C     (FIRST GUESS, FROM LINEAR FIT TO FIG. 3)
C
  102 ZR = 9. + 11. * ZCHG / 45.
      ZR = - DLOG( ZC / (ZR**2) ) / ZL
      ZFR = ZR * ZR * DEXP(- ZL * ZR)
      ICOUNT = 0
C
  105 IF(ZR .LT. 2./ZL) GO TO 180
      IF(ICOUNT .GT. 100) GO TO 181
      ICOUNT = ICOUNT + 1
C
C     WRITE(10,199)ZR
C  199 FORMAT(1X,'ZR=',F10.2)
C
      ZR = ZR + (ZC/ZFR - 1.) / (2./ZR - ZL)
      ZFR = ZR * ZR * EXP (- ZL * ZR)
C
      IF( ABS(ZFR - ZC)/ZC .GE. 0.001) GO TO 105
C
C     ITERATION COMPLETE TO 0.1% IN VELOCITY; COMPUTE SIGMA
C
      PSIGMA(JSPC) = 3.14159 * (0.529E-08 * ZR)**2
  110 CONTINUE
C
C     FILL IN Z = 1 CROSS SECTION WITH Z = 2 VALUE
C
      PSIGMA(2) = PSIGMA(3)
      RETURN
C
  180 KERR = 2
      RETURN
  181 KERR = 3
      RETURN
C
C
C     KOPT = 2; GROZDANOV & JANEV
C     RESULTS SHOWN ONLY FOR Z = 10, 20, AND 30, 2.E06 < V < 8.E08
C     CM/SEC; ALL OTHER POINTS BY INTERPOLATION OR EXTRAPOLATION
C
  200 DO 210 JSPC = 2 , KNSPC
      ZCHG = DBLE(JSPC - 1)
C
C     EMPIRICAL FIT TO FIGURE 3, CENTERED AT V = 2.0E08 CM/SEC
C
      ZSLOPE = - (.25 + .04 * ZCHG) * 1.0E-14
      Z0 = .11 * ZCHG * 1.0E-14
      PSIGMA(JSPC) = DMAX1(0., Z0 + ZSLOPE * DLOG10(ZVCMS/2.E08))
C
  210 CONTINUE
      RETURN
C
C
C
C     KOPT = 3 ; OLSON & SALOP CLASSICAL TRAJECTORY.  USES A
C     POWER LAW FIT TO FIG. 1 AT 4 VELOCITIES IN THE RANGE
C     2.7E08 < V < 5.E08 CM/SEC.  INPUT VELOCITIES OUTSIDE THIS
C     RANGE YIELD DATA FOR THE APPROPRIATE LIMITING VELOCITY.  THE
C     LAST GIVEN DATA CURVE IS FOR Z=36, HENCE DATA FOR Z>36
C     REPRESENTS AN EXTRAPOLATION.
C
  300 CONTINUE
      Z3V = DMAX1(2.7E08, ZVCMS)
      Z3V = DMIN1(5.0E08, Z3V)
C
      IX = IDINT(Z3V/1.E08) - 1
      IF(IX .GT. 3) IX = 3
      IXP1 = IX + 1
C
C     USE LINEAR FIT TO Z=8 CURVE TO FIND X-SECTION FOR Z=8 AT GIVEN
C     VELOCITY
C
      ZSIG8 = 7.43E-15 - 1.26E-23 * Z3V
C
C     INTERPOLATE TO FIND POWER LAW EXPONENTS FOR THIS VELOCITY; ONE
C     FOR Z<8, THE OTHER FOR Z>8.
C
      ZALT = ZFITLT(IX) + (ZFITLT(IXP1) - ZFITLT(IX)) *
     &                 ( (Z3V-ZFITV(IX)) / (ZFITV(IXP1) - ZFITV(IX)) )
      ZAGT = ZFITGT(IX) + (ZFITGT(IXP1) - ZFITGT(IX)) *
     &                 ( (Z3V-ZFITV(IX)) / (ZFITV(IXP1)-ZFITV(IX)) )
C
C     FIT PARAMETERS FOUND FOR THIS VELOCITY; COMPUTE X-SECTIONS
C
      DO 315 JSPC = 2 , KNSPC
      ZDIV8 = DBLE(JSPC - 1) / 8.
      IF(ZDIV8 .GE. 1.) GO TO 310
      PSIGMA(JSPC) = ZSIG8 * ZDIV8**ZALT
      GO TO 315
  310 PSIGMA(JSPC) = ZSIG8 * ZDIV8**ZAGT
  315 CONTINUE
C
      RETURN
      END

